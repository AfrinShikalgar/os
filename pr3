#include<stdio.h>
#include<stdlib.h>
#include<pthread.h>
int a[10][10],b[10][10],c[10][10],k=0;
struct nod
{
  int i,j;
};
typedef struct nod node;
void *multi(void *arg)
{
  node *data=arg;
  int n=0,sum=0;
  for(n=0;n<k;n++)
  {
    sum=sum+a[data->i][n]*b[n][data->j];
  }
  c[data->i][data->j]=sum;
  
}
void input(int arr[10][10],int row,int column)
{
 for(int i=0;i<row;i++)
 {
   for(int j=0;j<column;j++)
   {
     printf("\n enter value at index i= %d ,j= %d ",i,j);
     scanf("%d",&arr[i][j]);
   }
 }
}
void display(int arr[10][10],int row,int column)
{
  for(int i=0;i<row;i++)
  {
    for(int j=0;j<column;j++)
    {
      printf("%d ",arr[i][j]);
    }
    printf("\n");
  }
}
int main()
{
  int r1,c1,r2,c2,i,j;
  pthread_t thread;
  printf("\n enter the row and column of matrix 1:");
  scanf("%d %d",&r1,&c1);
  printf("\n enter the row and column of matrix 2:");
  scanf("%d %d",&r2,&c2);
  if(c1==r2)
  {
    printf("\n enter values of matrix 1:-\n");
    input(a,r1,c1);
    printf("\n enter values of matrix 2:-\n");
    input(b,r1,c2);
  }
  k=c1;
  for(i=0;i<r1;i++)
  {
    for(j=0;j<c2;j++)
    {
      node *data=(node *)malloc(sizeof(node));
      data->i=i;
      data->j=j;
      pthread_create(&thread,NULL,multi,data);
      pthread_join(thread,NULL);
    }
  }
  printf("\n matrix 1:\n");
  display(a,r1,c1);
  printf("\n matrix 2:\n");
  display(b,r2,c2);
  printf("\n resultant matrix :\n");
  display(c,r1,c2);
 return 0;
}
